diff --git a/dom/ipc/ContentParent.cpp b/dom/ipc/ContentParent.cpp
--- a/dom/ipc/ContentParent.cpp
+++ b/dom/ipc/ContentParent.cpp
@@ -184,16 +184,18 @@
 #include "mozilla/dom/ipc/StructuredCloneData.h"
 #include "mozilla/psm/PSMContentListener.h"
 #include "nsPluginHost.h"
 #include "nsPluginTags.h"
 #include "nsIBlocklistService.h"
 
 #include "nsIBidiKeyboard.h"
 
+#include "nsILoginManager.h"
+
 #ifdef MOZ_WEBRTC
 #include "signaling/src/peerconnection/WebrtcGlobalParent.h"
 #endif
 
 #if defined(ANDROID) || defined(LINUX)
 #include "nsSystemInfo.h"
 #endif
 
@@ -3031,16 +3033,43 @@ ContentParent::RecvAudioChannelServiceSt
   MOZ_ASSERT(service);
 
   service->ChildStatusReceived(mChildID, aTelephonyChannel,
                                aContentOrNormalChannel, aAnyChannel);
   return true;
 }
 
 bool
+ContentParent::RecvFindLogins(const uint64_t& aGetterId, const nsString& aPrepath)
+{
+  /*nsCOMPtr<nsILoginManager> loginmanager = do_GetService("@mozilla.org/login-manager;1");*/
+  /*
+  nsILoginInfo** loginInfos;
+  nsAString httpRealm(prepath);
+  nsAString actionUrl("");
+  unsigned int count;
+  //const nsAString& hostname("{}");
+  loginmanager->FindLogins(&count, "{}", actionUrl, httpRealm, &loginInfos);
+  nsILoginInfo* loginInfo = loginInfos[0];
+  if (loginInfo) {
+    nsAString password;
+    nsAString username;
+    loginInfo->GetUsername(username);
+    loginInfo->GetPassword(password);
+    *aUsername.Assign(username);
+    *aPassword.Assign(password);
+  }
+  */
+  nsString username = NS_LITERAL_STRING("username");
+  nsString password = NS_LITERAL_STRING("password");
+  SendLoginsForPath(aGetterId, aPrepath, username, password);
+  return true;
+}
+
+bool
 ContentParent::RecvDataStoreGetStores(
                                     const nsString& aName,
                                     const nsString& aOwner,
                                     const IPC::Principal& aPrincipal,
                                     InfallibleTArray<DataStoreSetting>* aValue)
 {
   RefPtr<DataStoreService> service = DataStoreService::GetOrCreate();
   if (NS_WARN_IF(!service)) {
